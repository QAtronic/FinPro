version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: corpfin-pro-db
    environment:
      POSTGRES_DB: corpfin_pro
      POSTGRES_USER: corpfin_user
      POSTGRES_PASSWORD: corpfin_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U corpfin_user -d corpfin_pro"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CorpFin Pro Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
    container_name: corpfin-pro-app
    environment:
      DATABASE_URL: postgresql://corpfin_user:corpfin_password@postgres:5432/corpfin_pro
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-secret-key-here-change-in-production
      NODE_ENV: development
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (for caching and sessions - optional)
  redis:
    image: redis:7-alpine
    container_name: corpfin-pro-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: corpfin-pro-network
